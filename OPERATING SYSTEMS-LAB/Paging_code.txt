Aim :  To write a C program to implement memory management using paging technique.

Algorithm:

Step 1 : Read the base address, page size, number of pages and memory unit.
Step 2 : If the memory limit is less than the base address display the memory limit is less than limit.
Step 3 : Create the page table with the number of pages and page address.
Step 4 : Read the page number and displacement value.
Step 5 : If the page number and displacement value is valid, add the displacement value with the address corresponding to the page number and display the result.
Step 6 : Display the page is not found or displacement should be less than page size.

Program:

#include<stdio.h>
#define MAX 50
int main()
{
int page[MAX],i,n,f,ps,off,pno;
int choice=0;
printf("\nEnter the no. of pages in the memory: ");
scanf("%d",&n);
printf("\nEnter the page size: ");
scanf("%d",&ps);
printf("\nEnter the no. of frames: ");
scanf("%d",&f);
for(i=0;i<n;i++)
page[i]=-1;
printf("\nEnter the page table\n");
printf("(Enter frame no. as -1 if that page is not present in any frame)\n\n");
printf("\npageno\tframeno\n-------\t-------");
for(i=0;i<n;i++)
{
printf("\n\n%d\t\t",i);
scanf("%d",&page[i]);
}
do
{
printf("\n\nEnter the logical address(i.e,page no & offset):");
scanf("%d%d",&pno,&off);
if(page[pno]==-1)
printf("\n\nThe required page is not available in any of frames");
else
printf("\n\nPhysical address(i.e,frame no & offset):%d,%d",page[pno],off);
printf("\nDo you want to continue(1/0)?:");
scanf("%d",&choice);
}while(choice==1);
return 1;
}
